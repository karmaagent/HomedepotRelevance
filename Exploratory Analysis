unique <- unique(train$product_uid)
> length(unique)
[1] 54667
> pidtrain <- unique(train$product_uid)
> length(pidtrain)
[1] 54667
> pidtest <- unique(test$product_uid)
> length(pidtest)
[1] 97460
> pidatt <- unique(attributes$product_uid)
> length(pidatt)
[1] 86264
> piddes <- unique(product_descriptions$product_uid)
> length(piddes)
[1] 124428
> library(VennDiagram)
Loading required package: grid
Loading required package: futile.logger
Warning message:
package ‘VennDiagram’ was built under R version 3.2.5 
> grid.newpage()
> venn.plot1<-draw.pairwise.venn(
+     length(pidtrain),length(pidtest),length(intersect(pidtrain,pidtest)),
+     category = c("train product_uid", "test product_uid"),
+     lty = rep("blank",2),
+     fill = c("light green", "purple"),
+     alpha = rep(0.5, 2),
+     cat.pos = c(0,0),
+     cat.dist = rep(0.025, 2))
> library(ggplot2)
> ggplot(train,aes(relevance))+geom_bar()+labs(title="Frequency of individual relevance scores",x="relevance score",y="row count")
> st_train <- unique(train$search_term)
> st_test <- unique(test$search_term)
> diff_terms_1 <- setdiff(st_train,st_test)
> diff_terms_2 <- setdiff(st_test,st_train)
> common_terms <- intersect(st_train,st_test)
> 
> (paste("Number of search terms in train :",(length(st_train)),sep=" "))
[1] "Number of search terms in train : 11795"
> (paste("Number of search terms in test :",(length(st_test)),sep=" "))
[1] "Number of search terms in test : 22427"
> print(paste("Number of terms in train not in test :",(length(diff_terms_1)),sep=" "))
[1] "Number of terms in train not in test : 2174"
> print(paste("Number of terms in test not in train :",(length(diff_terms_2)),sep=" "))
[1] "Number of terms in test not in train : 12806"
> print(paste("Number of common terms in test and train :",(length(common_terms)),sep=" "))
[1] "Number of common terms in test and train : 9621"

> library(ggplot2) # Data visualization
> library(readr) # CSV file I/O, e.g. the read_csv function
> library(wordcloud)
> library(tm)

> search_text <- paste(train$search_term, collapse=" ")
> search_source <- VectorSource(search_text)
> corpus <- Corpus(search_source)
> corpus <- tm_map(corpus, content_transformer(tolower))
> dtm <- DocumentTermMatrix(corpus)
> dtm2 <- as.matrix(dtm)
> frequency <- colSums(dtm2)
> frequency <- sort(frequency, decreasing=TRUE)
> head(frequency)
  door  light    for   inch   wall shower 
  2679   2021   1815   1487   1442   1429 
> words <- names(frequency)
> wordcloud(words[1:100], frequency[1:100])
